To handle potential negative values resulting from `calc()`, we can use the `max()` function: ```css #container { width: max(0, calc(100% - 20px)); } #element { width: max(0, calc(50% - 10px)); } ```  This ensures that the width of both the container and the element will never be less than 0.  If the `calc()` expression yields a negative value, `max()` will return 0, preventing the negative width from causing layout issues. This approach improves the robustness of the layout by providing a fallback mechanism when the `calc()` function produces unintended negative values.